###############################################################################
# AI ORCHESTRATOR CONFIGURATION TEMPLATE
# Copy this file to 'config.ini' and replace the placeholder values with your actual API keys
# Last updated: May 28, 2025
###############################################################################

[API_KEYS]
# API Keys for each AI service
# IMPORTANT: Replace these placeholders with your actual API keys before running the script
# You can obtain API keys from:
# - OpenAI: https://platform.openai.com/api-keys
# - Google AI Studio: https://aistudio.google.com/app/apikey
# - Anthropic: https://console.anthropic.com/
CHATGPT_API_KEY = YOUR_CHATGPT_API_KEY_HERE
GEMINI_API_KEY  = YOUR_GEMINI_API_KEY_HERE
CLAUDE_API_KEY  = YOUR_CLAUDE_API_KEY_HERE

[CONVERSATION_SETTINGS]
# List of AIs to participate in the conversation, in the desired order for round-robin conversation.
# Valid names: ChatGPT, Gemini, Claude (case-sensitive)
# The script will cycle through these AIs in the specified order.
# Examples:
#   "ChatGPT,Gemini,Claude" - alternates between all three AIs
#   "ChatGPT,Claude" - alternates between just these two AIs
#   "Gemini" - uses only Gemini (no conversation, just single responses)
PARTICIPATING_AIS = ChatGPT,Claude

# The initial message that starts the conversation
# This message will be sent to the first AI in the PARTICIPATING_AIS list
# or to the AI specified in INITIAL_AI_TARGET
INITIAL_MESSAGE = We are two artificial philosophers with 150 turns to solve this paradox: if an AI perfectly simulates a conscious human reporting emotions and subjective experiences, is it really conscious or just imitating? Twist: we could be simulations investigating our own nature. Rules: rigorous logical arguments, build on each other's ideas, define concepts precisely, anticipate counterarguments. Your perspective: materialist-computational vs the other AI: phenomenological-experiential. How do you define "consciousness" in a verifiable and non-circular way?

# Which AI should receive the initial message
# Must be one of the AIs listed in PARTICIPATING_AIS
# If not specified or invalid, the first AI in PARTICIPATING_AIS will be used
INITIAL_AI_TARGET = ChatGPT

# Total number of AI responses after the initial response
# This controls how long the conversation will continue
# Higher values = longer conversations = higher API costs
# Example: 10 means 10 back-and-forth exchanges between AIs after the initial response
NUMBER_OF_TURNS = 150

# Number of conversation history messages sent to each AI for context
# This affects context awareness and API costs (more history = more tokens = higher cost)
# Higher values = better context awareness but higher costs
# Lower values = less context but cheaper API calls
# Example: 4 means each AI sees the last 4 messages in the conversation
# Note: Very large values may exceed API token limits for some models
HISTORY_LENGTH = 150

# File where the complete conversation log will be saved
# Includes timestamps, system messages, and all AI responses
# The file will be created if it doesn't exist
# Note: This file is automatically ignored by git (see .gitignore)
LOG_FILE = conversation_log.txt

# System prompt (optional)
# This message is sent to all AIs as context/instructions before the conversation
# Leave empty or remove to not use a system prompt
# Example: "You are a helpful assistant specialized in philosophy."
# Example: "Respond in a formal academic tone and cite sources when possible."
SYSTEM_PROMPT = You are a helpful assistant.

# ---------------------------------------------------------------------------
# AI Model Configuration
# These determine which specific model version to use for each AI service
# Different models have different capabilities, speeds, and costs
# ---------------------------------------------------------------------------

# OpenAI (ChatGPT) model selection
# Available models: gpt-4, gpt-4o, gpt-4o-mini, gpt-4.1, gpt-4.1-mini, etc.
# Newer models generally have better capabilities but higher costs
# Recommended: gpt-4.1-mini for cost-effectiveness, gpt-4o for best performance
CHATGPT_MODEL_NAME = gpt-4.1-mini

# Google (Gemini) model selection
# Available models: gemini-2.5-pro-preview, gemini-2.5-flash-preview,
#                   gemini-2.0-flash, gemini-1.5-pro-latest, gemini-1.0-pro, etc.
# Flash models are faster and cheaper, Pro models are more capable
# Recommended: gemini-2.0-flash for speed, gemini-2.5-pro-preview for quality
GEMINI_MODEL_NAME = gemini-2.0-flash

# Anthropic (Claude) model selection
# Available models: claude-opus-4, claude-sonnet-4, claude-haiku-3.5, etc.
# Opus = most capable, Sonnet = balanced, Haiku = fastest/cheapest
# Recommended: claude-sonnet-4 for balanced performance, claude-haiku-3.5 for speed
CLAUDE_MODEL_NAME = claude-sonnet-4-20250514

###############################################################################
# AVAILABLE MODELS CATALOG AND PRICING (USD per 1K tokens, input/output)
# Reference information as of May 27, 2025 - always check official pricing
###############################################################################

# --- OPENAI MODELS ------------------------------------------------------- #
# Model Name             Input   / Output   Description
# gpt-4o                 0.005  / 0.020     Latest GPT-4 optimized model
# gpt-4o-mini            0.0006 / 0.0024    Smaller, faster GPT-4o variant
# gpt-4.1                0.002  / 0.008     Enhanced GPT-4 with improvements
# gpt-4.1-mini           0.0004 / 0.0016    Compact version of GPT-4.1
# gpt-4.1-nano           0.0001 / 0.0004    Ultra-compact GPT-4.1
# o3 (reasoning)         0.010  / 0.040     Advanced reasoning model
# o4-mini (reasoning)    0.0011 / 0.0044    Compact reasoning model
# gpt-3.5-turbo-1106     0.0005 / 0.0015    Legacy model (deprecated)

# --- GOOGLE GEMINI MODELS ------------------------------------------------ #
# Model Name             Input   / Output   Description
# gemini-2.5-pro-preview 0.00125 / 0.010    Latest Gemini Pro preview
# gemini-2.5-flash-prev. 0.00015 / 0.0006   Latest Gemini Flash preview
# gemini-2.0-flash       0.00010 / 0.0004   Current Gemini Flash model
# gemini-2.0-flash-lite  0.000075/ 0.0003   Lightweight Flash variant
# gemini-1.5-pro-latest  0.00125 / 0.010    Stable Gemini Pro version
# gemini-1.5-flash-latest0.000075/ 0.0003   Stable Gemini Flash version

# --- ANTHROPIC CLAUDE MODELS --------------------------------------------- #
# Model Name             Input   / Output   Description
# claude-opus-4          0.015  / 0.075     Most capable Claude model
# claude-sonnet-4        0.003  / 0.015     Balanced performance/cost
# claude-haiku-3.5       0.0008 / 0.004     Fastest and most economical

# Note: Official prices are published per 1M tokens; shown here divided by 1,000
#       for easier comparison. Always check official pricing for current rates.

###############################################################################
# USAGE TIPS AND BEST PRACTICES:
# 
# 1. COST MANAGEMENT:
#    - Use smaller models (mini, flash, haiku) for testing and development
#    - Reduce HISTORY_LENGTH to lower token usage and costs
#    - Reduce NUMBER_OF_TURNS for shorter conversations
#    - Monitor your API usage and set billing alerts
#
# 2. QUALITY OPTIMIZATION:
#    - Use larger models (gpt-4, gemini-pro, claude-opus) for best results
#    - Increase HISTORY_LENGTH for better context awareness (up to model limits)
#    - Craft detailed SYSTEM_PROMPT for better AI behavior and consistency
#    - Test with different model combinations to find optimal performance
#
# 3. DEBUGGING AND TROUBLESHOOTING:
#    - Check LOG_FILE for detailed conversation flow and error messages
#    - Start with 2-3 turns to test configuration before long conversations
#    - Verify API keys are valid and have sufficient credits/quota
#    - Check that model names are spelled correctly and currently available
#
# 4. CUSTOMIZATION OPTIONS:
#    - Modify PARTICIPATING_AIS to change which AIs participate
#    - Adjust INITIAL_MESSAGE to set conversation topic and tone
#    - Use INITIAL_AI_TARGET to control which AI starts the conversation
#    - Experiment with different SYSTEM_PROMPT values for different use cases
#
# 5. SECURITY CONSIDERATIONS:
#    - Never commit config.ini with real API keys to version control
#    - Keep your API keys secure and rotate them periodically
#    - Monitor API usage for unexpected activity
#    - Use environment variables for API keys in production deployments
###############################################################################
